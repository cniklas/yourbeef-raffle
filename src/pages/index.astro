---
import Layout from '../layouts/Layout.astro'
---

<Layout title="Yourbeef Gewinnspiel">
	<div class="max-w-xl">
		<img class="max-w-200px mx-auto mb-6" src="/yourbeef-logo.png" alt="" width="200" height="48" />
		<h1 class="mb-7 text-4xl/tight uppercase tracking-wide text-white md:text-5xl/tight">
			Wie viel wiegt das ausgestellte Stück Fleisch?
		</h1>

		<div class="mb-12">
			Der Gewinner erhält ein <a
				href="https://yourbeef.de/premium-steak-paket.html"
				class="whitespace-nowrap font-semibold text-[--text-light]">Premium Steak Paket</a
			> im Wert von <strong class="whitespace-nowrap font-semibold text-[--text-light]">über €&nbsp;120,—</strong> mit den
			besten Steak Cuts von der Simmentaler Färse – frei Haus zum Wunschliefertermin.
		</div>

		<form class="relative mb-7 px-4 py-5 text-left md:px-8 md:py-10" id="js-form">
			<div class="mb-5">
				<label for="form-answer" class="text-label">Das ausgestellte Stück wiegt:</label>
				<div class="flex items-center">
					<input
						type="text"
						name="answer"
						id="form-answer"
						class="w-20 text-right"
						inputmode="decimal"
						autocomplete="off"
						maxlength="8"
						required
					/>
					<span class="ml-2">kg</span>
				</div>
			</div>

			<div class="mb-5">
				<label class="checkbox-label">
					<input type="checkbox" name="raffle" required aria-describedby="raffle-hint" />
					Ja, ich möchte am Gewinnspiel teilnehmen.
				</label>
				<p class="text-xs" id="raffle-hint">
					Bitte informiert mich über das Ergebnis des Gewinnspiels. Ich bin mit der elektronischen Speicherung und
					Verarbeitung durch yourbeef.de (Fleischwaren Harald Kiesinger e.K.) einverstanden. Meine Daten werden nicht an
					Dritte weitergegeben.
				</p>
			</div>

			<div class="mb-5">
				<label class="checkbox-label">
					<input type="checkbox" name="newsletter" aria-describedby="newsletter-hint" />
					<span>Ja, sendet mir bitte den Yourbeef E-Mail-Newsletter. <small class="text-xs">(optional)</small></span>
				</label>
				<p class="text-xs" id="newsletter-hint">
					Informationen über exklusive Angebote, die besten Grilltipps und Gratis-Rezepte.
				</p>
			</div>

			<div class="mb-5">
				<label for="form-email" class="text-label">E-Mail-Adresse:</label>
				<div>
					<input
						type="email"
						name="email"
						id="form-email"
						inputmode="email"
						autocomplete="email"
						maxlength="64"
						required
					/>
				</div>
			</div>

			<div class="mb-5">
				<label for="form-firstname" class="text-label">Vorname:</label>
				<div>
					<input type="text" name="first_name" id="form-firstname" autocomplete="given-name" maxlength="24" required />
				</div>
			</div>
			<div class="mb-8">
				<label for="form-lastname" class="text-label">Name:</label>
				<div>
					<input
						type="text"
						name="last_name"
						id="form-lastname"
						autocomplete="family-name"
						maxlength="32"
						required
						enterkeyhint="send"
					/>
				</div>
			</div>

			<div>
				<button
					type="submit"
					class="rounded-sm bg-[--button-bg] px-7 py-2 font-semibold text-white hover:bg-[--button-bg-hover] focus-visible:bg-[--button-bg-hover]"
					id="js-submit-button">Absenden</button
				>
			</div>
		</form>
	</div>

	<dialog
		class="max-w-xl bg-white px-4 py-5 text-[--text-dark]"
		id="js-dialog"
		role="alertdialog"
		aria-labelledby="js-dialog-content"
	>
		<button type="button" class="dialog-close-button" id="js-close-button"
			><span class="sr-only">Dialog schließen</span></button
		>
		<div class="grid grid-flow-row gap-2" id="js-dialog-content"></div>
	</dialog>
</Layout>

<script>
	const formEl = document.querySelector('#js-form') as HTMLFormElement
	const submitButtonEl = document.querySelector('#js-submit-button') as HTMLButtonElement
	const dialogEl = document.querySelector('#js-dialog') as HTMLDialogElement
	const closeButtonEl = document.querySelector('#js-close-button') as HTMLButtonElement
	const dialogContentEl = document.querySelector('#js-dialog-content') as HTMLDivElement

	const handleSuccess = () => {
		dialogContentEl.innerHTML = `
			<div class="dialog-header success">Vielen Dank!</div>
			<div>Deine Antwort wurde erfolgreich übertragen.</div>
		`
	}
	const handleError = async (response: Response) => {
		const isValidationError = response.status === 422
		const data = await response.json()
		dialogContentEl.innerHTML = `
			<div class="dialog-header error">${
				isValidationError ? 'Bitte korrigiere deine Eingabe' : 'Ein Fehler ist aufgetreten'
			}</div>
			<div>${
				isValidationError && data?.data?.errors?.email?._isUnique
					? 'Diese E-Mail-Adresse wurde bereits eingetragen'
					: data?.data?.message ?? response.statusText ?? ''
			}</div>
		`
		submitButtonEl.setAttribute('aria-disabled', 'false')
	}

	formEl.addEventListener('submit', async e => {
		e.preventDefault()
		if (submitButtonEl.getAttribute('aria-disabled') === 'true') return
		submitButtonEl.setAttribute('aria-disabled', 'true')

		try {
			const response = await fetch(`${import.meta.env.PUBLIC_POSTURL}/gravel/submits/`, {
				method: 'POST',
				cache: 'no-cache',
				body: new FormData(formEl),
				headers: {
					accept: 'application/json',
				},
			})

			response.ok ? handleSuccess() : handleError(response)
		} catch (err) {
			console.error(err)
			dialogContentEl.innerHTML = `<div class="dialog-header error">${
				err.message ?? 'Ein unbekannter Fehler ist aufgetreten'
			}</div>`
			submitButtonEl.setAttribute('aria-disabled', 'false')
		} finally {
			dialogEl.showModal()
		}
	})

	closeButtonEl.addEventListener('click', () => {
		dialogEl.close()
		dialogContentEl.innerHTML = ''
	})
</script>
